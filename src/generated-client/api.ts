/* tslint:disable */
/* eslint-disable */
/**
 * OSIDB API
 * REST API autogenerated docs for the OSIDB and its components
 *
 * The version of the OpenAPI document: 4.3.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError } from './base';

/**
 * Affect serializer
 * @export
 * @interface Affect
 */
export interface Affect {
    /**
     * 
     * @type {string}
     * @memberof Affect
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof Affect
     */
    'flaw': string | null;
    /**
     * 
     * @type {AffectAffectedness}
     * @memberof Affect
     */
    'affectedness'?: AffectAffectedness;
    /**
     * 
     * @type {AffectResolution}
     * @memberof Affect
     */
    'resolution'?: AffectResolution;
    /**
     * 
     * @type {string}
     * @memberof Affect
     */
    'ps_module': string;
    /**
     * 
     * @type {string}
     * @memberof Affect
     */
    'ps_product': string;
    /**
     * 
     * @type {string}
     * @memberof Affect
     */
    'ps_component': string;
    /**
     * 
     * @type {AffectImpact}
     * @memberof Affect
     */
    'impact'?: AffectImpact;
    /**
     * 
     * @type {Array<Tracker>}
     * @memberof Affect
     */
    'trackers': Array<Tracker>;
    /**
     * 
     * @type {string}
     * @memberof Affect
     */
    'delegated_resolution': string;
    /**
     * 
     * @type {Array<AffectCVSS>}
     * @memberof Affect
     */
    'cvss_scores': Array<AffectCVSS>;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof Affect
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof Affect
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof Affect
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof Affect
     */
    'updated_dt': string;
}
/**
 * @type AffectAffectedness
 * @export
 */
export type AffectAffectedness = AffectednessEnum | BlankEnum;

/**
 * 
 * @export
 * @interface AffectBulkPostPutResponse
 */
export interface AffectBulkPostPutResponse {
    /**
     * 
     * @type {Array<Affect>}
     * @memberof AffectBulkPostPutResponse
     */
    'results': Array<Affect>;
}
/**
 * Affect serializer
 * @export
 * @interface AffectBulkPut
 */
export interface AffectBulkPut {
    /**
     * 
     * @type {string}
     * @memberof AffectBulkPut
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof AffectBulkPut
     */
    'flaw': string | null;
    /**
     * 
     * @type {AffectAffectedness}
     * @memberof AffectBulkPut
     */
    'affectedness'?: AffectAffectedness;
    /**
     * 
     * @type {AffectResolution}
     * @memberof AffectBulkPut
     */
    'resolution'?: AffectResolution;
    /**
     * 
     * @type {string}
     * @memberof AffectBulkPut
     */
    'ps_module': string;
    /**
     * 
     * @type {string}
     * @memberof AffectBulkPut
     */
    'ps_product': string;
    /**
     * 
     * @type {string}
     * @memberof AffectBulkPut
     */
    'ps_component': string;
    /**
     * 
     * @type {AffectImpact}
     * @memberof AffectBulkPut
     */
    'impact'?: AffectImpact;
    /**
     * 
     * @type {Array<Tracker>}
     * @memberof AffectBulkPut
     */
    'trackers': Array<Tracker>;
    /**
     * 
     * @type {string}
     * @memberof AffectBulkPut
     */
    'delegated_resolution': string;
    /**
     * 
     * @type {Array<AffectCVSS>}
     * @memberof AffectBulkPut
     */
    'cvss_scores': Array<AffectCVSS>;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof AffectBulkPut
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof AffectBulkPut
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof AffectBulkPut
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof AffectBulkPut
     */
    'updated_dt': string;
}
/**
 * AffectCVSS serializer
 * @export
 * @interface AffectCVSS
 */
export interface AffectCVSS {
    /**
     * 
     * @type {string}
     * @memberof AffectCVSS
     */
    'affect'?: string;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSS
     */
    'comment'?: string | null;
    /**
     * 
     * @type {CvssVersionEnum}
     * @memberof AffectCVSS
     */
    'cvss_version': CvssVersionEnum;
    /**
     * 
     * @type {IssuerEnum}
     * @memberof AffectCVSS
     */
    'issuer': IssuerEnum;
    /**
     * 
     * @type {number}
     * @memberof AffectCVSS
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSS
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSS
     */
    'vector': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof AffectCVSS
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof AffectCVSS
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSS
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof AffectCVSS
     */
    'updated_dt': string;
}


/**
 * AffectCVSS serializer
 * @export
 * @interface AffectCVSSPost
 */
export interface AffectCVSSPost {
    /**
     * 
     * @type {string}
     * @memberof AffectCVSSPost
     */
    'comment'?: string | null;
    /**
     * 
     * @type {CvssVersionEnum}
     * @memberof AffectCVSSPost
     */
    'cvss_version': CvssVersionEnum;
    /**
     * 
     * @type {IssuerEnum}
     * @memberof AffectCVSSPost
     */
    'issuer': IssuerEnum;
    /**
     * 
     * @type {number}
     * @memberof AffectCVSSPost
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSSPost
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSSPost
     */
    'vector': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof AffectCVSSPost
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof AffectCVSSPost
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSSPost
     */
    'created_dt': string;
}


/**
 * AffectCVSS serializer
 * @export
 * @interface AffectCVSSPut
 */
export interface AffectCVSSPut {
    /**
     * 
     * @type {string}
     * @memberof AffectCVSSPut
     */
    'comment'?: string | null;
    /**
     * 
     * @type {CvssVersionEnum}
     * @memberof AffectCVSSPut
     */
    'cvss_version': CvssVersionEnum;
    /**
     * 
     * @type {IssuerEnum}
     * @memberof AffectCVSSPut
     */
    'issuer': IssuerEnum;
    /**
     * 
     * @type {number}
     * @memberof AffectCVSSPut
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSSPut
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSSPut
     */
    'vector': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof AffectCVSSPut
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof AffectCVSSPut
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof AffectCVSSPut
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof AffectCVSSPut
     */
    'updated_dt': string;
}


/**
 * @type AffectImpact
 * @export
 */
export type AffectImpact = BlankEnum | ImpactEnum;

/**
 * Affect serializer
 * @export
 * @interface AffectPost
 */
export interface AffectPost {
    /**
     * 
     * @type {string}
     * @memberof AffectPost
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof AffectPost
     */
    'flaw': string | null;
    /**
     * 
     * @type {AffectAffectedness}
     * @memberof AffectPost
     */
    'affectedness'?: AffectAffectedness;
    /**
     * 
     * @type {AffectResolution}
     * @memberof AffectPost
     */
    'resolution'?: AffectResolution;
    /**
     * 
     * @type {string}
     * @memberof AffectPost
     */
    'ps_module': string;
    /**
     * 
     * @type {string}
     * @memberof AffectPost
     */
    'ps_product': string;
    /**
     * 
     * @type {string}
     * @memberof AffectPost
     */
    'ps_component': string;
    /**
     * 
     * @type {AffectImpact}
     * @memberof AffectPost
     */
    'impact'?: AffectImpact;
    /**
     * 
     * @type {Array<Tracker>}
     * @memberof AffectPost
     */
    'trackers': Array<Tracker>;
    /**
     * 
     * @type {string}
     * @memberof AffectPost
     */
    'delegated_resolution': string;
    /**
     * 
     * @type {Array<AffectCVSS>}
     * @memberof AffectPost
     */
    'cvss_scores': Array<AffectCVSS>;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof AffectPost
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof AffectPost
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof AffectPost
     */
    'created_dt': string;
}
/**
 * 
 * @export
 * @interface AffectReportData
 */
export interface AffectReportData {
    /**
     * 
     * @type {string}
     * @memberof AffectReportData
     */
    'ps_module': string;
    /**
     * 
     * @type {string}
     * @memberof AffectReportData
     */
    'ps_component': string;
    /**
     * 
     * @type {AffectAffectedness}
     * @memberof AffectReportData
     */
    'affectedness'?: AffectAffectedness;
    /**
     * 
     * @type {AffectResolution}
     * @memberof AffectReportData
     */
    'resolution'?: AffectResolution;
    /**
     * 
     * @type {Array<TrackerReportData>}
     * @memberof AffectReportData
     */
    'trackers'?: Array<TrackerReportData>;
}
/**
 * @type AffectResolution
 * @export
 */
export type AffectResolution = BlankEnum | ResolutionEnum;

/**
 * 
 * @export
 * @enum {string}
 */

export const AffectednessEnum = {
    New: 'NEW',
    Affected: 'AFFECTED',
    Notaffected: 'NOTAFFECTED'
} as const;

export type AffectednessEnum = typeof AffectednessEnum[keyof typeof AffectednessEnum];


/**
 * Alerts indicate some inconsistency in a linked flaw, affect, tracker or other models.
 * @export
 * @interface Alert
 */
export interface Alert {
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    'description': string;
    /**
     * 
     * @type {AlertTypeEnum}
     * @memberof Alert
     */
    'alert_type'?: AlertTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    'resolution_steps'?: string;
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    'parent_uuid': string;
    /**
     * 
     * @type {string}
     * @memberof Alert
     */
    'parent_model': string;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const AlertTypeEnum = {
    Warning: 'WARNING',
    Error: 'ERROR'
} as const;

export type AlertTypeEnum = typeof AlertTypeEnum[keyof typeof AlertTypeEnum];


/**
 * 
 * @export
 * @interface Audit
 */
export interface Audit {
    /**
     * When the event was created.
     * @type {string}
     * @memberof Audit
     */
    'pgh_created_at': string;
    /**
     * The unique identifier across all event tables.
     * @type {string}
     * @memberof Audit
     */
    'pgh_slug': string;
    /**
     * The object model.
     * @type {string}
     * @memberof Audit
     */
    'pgh_obj_model': string;
    /**
     * The primary key of the object.
     * @type {string}
     * @memberof Audit
     */
    'pgh_obj_id'?: string | null;
    /**
     * The event label.
     * @type {string}
     * @memberof Audit
     */
    'pgh_label': string;
    /**
     * The context associated with the event.
     * @type {any}
     * @memberof Audit
     */
    'pgh_context'?: any | null;
    /**
     * The diff between the previous event of the same label.
     * @type {any}
     * @memberof Audit
     */
    'pgh_diff': any;
    /**
     * 
     * @type {string}
     * @memberof Audit
     */
    'pgh_data': string;
}
/**
 * 
 * @export
 * @interface AuthTokenCreate200Response
 */
export interface AuthTokenCreate200Response {
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200Response
     */
    'username': string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200Response
     */
    'password': string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200Response
     */
    'access': string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200Response
     */
    'refresh': string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface AuthTokenCreate200ResponseAllOf
 */
export interface AuthTokenCreate200ResponseAllOf {
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200ResponseAllOf
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200ResponseAllOf
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200ResponseAllOf
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenCreate200ResponseAllOf
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface AuthTokenRefreshCreate200Response
 */
export interface AuthTokenRefreshCreate200Response {
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRefreshCreate200Response
     */
    'access': string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRefreshCreate200Response
     */
    'refresh': string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRefreshCreate200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRefreshCreate200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRefreshCreate200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRefreshCreate200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface AuthTokenRetrieve200Response
 */
export interface AuthTokenRetrieve200Response {
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRetrieve200Response
     */
    'access'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRetrieve200Response
     */
    'refresh'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface AuthTokenVerifyCreate200Response
 */
export interface AuthTokenVerifyCreate200Response {
    /**
     * 
     * @type {string}
     * @memberof AuthTokenVerifyCreate200Response
     */
    'token': string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenVerifyCreate200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenVerifyCreate200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenVerifyCreate200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthTokenVerifyCreate200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const BlankEnum = {
    Empty: ''
} as const;

export type BlankEnum = typeof BlankEnum[keyof typeof BlankEnum];


/**
 * 
 * @export
 * @interface CollectorsApiV1StatusRetrieve200Response
 */
export interface CollectorsApiV1StatusRetrieve200Response {
    /**
     * 
     * @type {Array<CollectorsApiV1StatusRetrieve200ResponseCollectorsInner>}
     * @memberof CollectorsApiV1StatusRetrieve200Response
     */
    'collectors'?: Array<CollectorsApiV1StatusRetrieve200ResponseCollectorsInner>;
    /**
     * 
     * @type {string}
     * @memberof CollectorsApiV1StatusRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof CollectorsApiV1StatusRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof CollectorsApiV1StatusRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof CollectorsApiV1StatusRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface CollectorsApiV1StatusRetrieve200ResponseCollectorsInner
 */
export interface CollectorsApiV1StatusRetrieve200ResponseCollectorsInner {
    /**
     * 
     * @type {string}
     * @memberof CollectorsApiV1StatusRetrieve200ResponseCollectorsInner
     */
    'data'?: CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerDataEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof CollectorsApiV1StatusRetrieve200ResponseCollectorsInner
     */
    'depends_on'?: Array<string>;
    /**
     * 
     * @type {object}
     * @memberof CollectorsApiV1StatusRetrieve200ResponseCollectorsInner
     */
    'error'?: object | null;
    /**
     * 
     * @type {boolean}
     * @memberof CollectorsApiV1StatusRetrieve200ResponseCollectorsInner
     */
    'is_complete'?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CollectorsApiV1StatusRetrieve200ResponseCollectorsInner
     */
    'is_up2date'?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof CollectorsApiV1StatusRetrieve200ResponseCollectorsInner
     */
    'data_models'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CollectorsApiV1StatusRetrieve200ResponseCollectorsInner
     */
    'state'?: CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerStateEnum;
    /**
     * 
     * @type {string}
     * @memberof CollectorsApiV1StatusRetrieve200ResponseCollectorsInner
     */
    'updated_until'?: string;
}

export const CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerDataEnum = {
    Empty: 'EMPTY',
    Partial: 'PARTIAL',
    Complete: 'COMPLETE'
} as const;

export type CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerDataEnum = typeof CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerDataEnum[keyof typeof CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerDataEnum];
export const CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerStateEnum = {
    Pending: 'PENDING',
    Blocked: 'BLOCKED',
    Ready: 'READY',
    Running: 'RUNNING'
} as const;

export type CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerStateEnum = typeof CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerStateEnum[keyof typeof CollectorsApiV1StatusRetrieve200ResponseCollectorsInnerStateEnum];

/**
 * 
 * @export
 * @interface CollectorsRetrieve200Response
 */
export interface CollectorsRetrieve200Response {
    /**
     * 
     * @type {string}
     * @memberof CollectorsRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof CollectorsRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CollectorsRetrieve200Response
     */
    'index'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CollectorsRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof CollectorsRetrieve200Response
     */
    'version'?: string;
}
/**
 * FlawComment serializer for use by FlawSerializer
 * @export
 * @interface Comment
 */
export interface Comment {
    /**
     * 
     * @type {string}
     * @memberof Comment
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof Comment
     */
    'text': string;
    /**
     * 
     * @type {string}
     * @memberof Comment
     */
    'external_system_id'?: string;
    /**
     * 
     * @type {number}
     * @memberof Comment
     */
    'order'?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Comment
     */
    'creator'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Comment
     */
    'is_private'?: boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof Comment
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof Comment
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof Comment
     */
    'updated_dt': string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const CvssVersionEnum = {
    V2: 'V2',
    V3: 'V3',
    V4: 'V4'
} as const;

export type CvssVersionEnum = typeof CvssVersionEnum[keyof typeof CvssVersionEnum];


/**
 * 
 * @export
 * @interface EPSS
 */
export interface EPSS {
    /**
     * 
     * @type {string}
     * @memberof EPSS
     */
    'cve': string;
    /**
     * 
     * @type {number}
     * @memberof EPSS
     */
    'epss': number;
}
/**
 * Erratum serializer
 * @export
 * @interface Erratum
 */
export interface Erratum {
    /**
     * 
     * @type {number}
     * @memberof Erratum
     */
    'et_id': number;
    /**
     * 
     * @type {string}
     * @memberof Erratum
     */
    'advisory_name': string;
    /**
     * 
     * @type {string}
     * @memberof Erratum
     */
    'shipped_dt': string | null;
    /**
     * 
     * @type {string}
     * @memberof Erratum
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof Erratum
     */
    'updated_dt': string;
}
/**
 * 
 * @export
 * @interface ExploitOnlyReportData
 */
export interface ExploitOnlyReportData {
    /**
     * 
     * @type {string}
     * @memberof ExploitOnlyReportData
     */
    'cve': string;
    /**
     * 
     * @type {string}
     * @memberof ExploitOnlyReportData
     */
    'date'?: string | null;
    /**
     * 
     * @type {ExploitOnlyReportDataSourceEnum}
     * @memberof ExploitOnlyReportData
     */
    'source': ExploitOnlyReportDataSourceEnum;
    /**
     * 
     * @type {string}
     * @memberof ExploitOnlyReportData
     */
    'reference'?: string;
    /**
     * 
     * @type {MaturityPreliminaryEnum}
     * @memberof ExploitOnlyReportData
     */
    'maturity_preliminary': MaturityPreliminaryEnum;
    /**
     * 
     * @type {boolean}
     * @memberof ExploitOnlyReportData
     */
    'flaw': boolean;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const ExploitOnlyReportDataSourceEnum = {
    Cisa: 'CISA',
    Metasploit: 'Metasploit',
    ExploitDb: 'Exploit-DB'
} as const;

export type ExploitOnlyReportDataSourceEnum = typeof ExploitOnlyReportDataSourceEnum[keyof typeof ExploitOnlyReportDataSourceEnum];


/**
 * 
 * @export
 * @interface ExploitsApiV1CollectUpdate200Response
 */
export interface ExploitsApiV1CollectUpdate200Response {
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1CollectUpdate200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1CollectUpdate200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1CollectUpdate200Response
     */
    'result_cisa'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1CollectUpdate200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1CollectUpdate200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface ExploitsApiV1CveMapRetrieve200Response
 */
export interface ExploitsApiV1CveMapRetrieve200Response {
    /**
     * 
     * @type {object}
     * @memberof ExploitsApiV1CveMapRetrieve200Response
     */
    'cves'?: object;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1CveMapRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1CveMapRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1CveMapRetrieve200Response
     */
    'page_size'?: number;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1CveMapRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1CveMapRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface ExploitsApiV1EpssList200Response
 */
export interface ExploitsApiV1EpssList200Response {
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1EpssList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1EpssList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1EpssList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<EPSS>}
     * @memberof ExploitsApiV1EpssList200Response
     */
    'results': Array<EPSS>;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1EpssList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1EpssList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1EpssList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1EpssList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface ExploitsApiV1FlawDataList200Response
 */
export interface ExploitsApiV1FlawDataList200Response {
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1FlawDataList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1FlawDataList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1FlawDataList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawReportData>}
     * @memberof ExploitsApiV1FlawDataList200Response
     */
    'results': Array<FlawReportData>;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1FlawDataList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1FlawDataList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1FlawDataList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1FlawDataList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface ExploitsApiV1ReportDataList200Response
 */
export interface ExploitsApiV1ReportDataList200Response {
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1ReportDataList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDataList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDataList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<ExploitOnlyReportData>}
     * @memberof ExploitsApiV1ReportDataList200Response
     */
    'results': Array<ExploitOnlyReportData>;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDataList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDataList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDataList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDataList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface ExploitsApiV1ReportDateRetrieve200Response
 */
export interface ExploitsApiV1ReportDateRetrieve200Response {
    /**
     * 
     * @type {Array<object>}
     * @memberof ExploitsApiV1ReportDateRetrieve200Response
     */
    'action_required'?: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDateRetrieve200Response
     */
    'cutoff_date'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDateRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDateRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1ReportDateRetrieve200Response
     */
    'evaluated_cves'?: number;
    /**
     * 
     * @type {Array<object>}
     * @memberof ExploitsApiV1ReportDateRetrieve200Response
     */
    'no_action'?: Array<object>;
    /**
     * 
     * @type {Array<object>}
     * @memberof ExploitsApiV1ReportDateRetrieve200Response
     */
    'not_relevant'?: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDateRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportDateRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface ExploitsApiV1ReportExplanationsRetrieve200Response
 */
export interface ExploitsApiV1ReportExplanationsRetrieve200Response {
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportExplanationsRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportExplanationsRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof ExploitsApiV1ReportExplanationsRetrieve200Response
     */
    'explanations'?: Array<object>;
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1ReportExplanationsRetrieve200Response
     */
    'page_size'?: number;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportExplanationsRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportExplanationsRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface ExploitsApiV1ReportPendingRetrieve200Response
 */
export interface ExploitsApiV1ReportPendingRetrieve200Response {
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportPendingRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportPendingRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof ExploitsApiV1ReportPendingRetrieve200Response
     */
    'pending_actions'?: Array<object>;
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1ReportPendingRetrieve200Response
     */
    'pending_actions_count'?: number;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportPendingRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1ReportPendingRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface ExploitsApiV1StatusRetrieve200Response
 */
export interface ExploitsApiV1StatusRetrieve200Response {
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1StatusRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1StatusRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1StatusRetrieve200Response
     */
    'exploits_count'?: number;
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1StatusRetrieve200Response
     */
    'exploits_count_relevant'?: number;
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1StatusRetrieve200Response
     */
    'last_exploit'?: number;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1StatusRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1StatusRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface ExploitsApiV1SupportedProductsList200Response
 */
export interface ExploitsApiV1SupportedProductsList200Response {
    /**
     * 
     * @type {number}
     * @memberof ExploitsApiV1SupportedProductsList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1SupportedProductsList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1SupportedProductsList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<SupportedProducts>}
     * @memberof ExploitsApiV1SupportedProductsList200Response
     */
    'results': Array<SupportedProducts>;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1SupportedProductsList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1SupportedProductsList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1SupportedProductsList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof ExploitsApiV1SupportedProductsList200Response
     */
    'version'?: string;
}
/**
 * serialize flaw model
 * @export
 * @interface Flaw
 */
export interface Flaw {
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'cve_id'?: string | null;
    /**
     * 
     * @type {AffectImpact}
     * @memberof Flaw
     */
    'impact'?: AffectImpact;
    /**
     * 
     * @type {Array<string>}
     * @memberof Flaw
     */
    'components'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'title': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof Flaw
     */
    'trackers': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'comment_zero': string;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'cve_description'?: string;
    /**
     * 
     * @type {FlawRequiresCveDescription}
     * @memberof Flaw
     */
    'requires_cve_description'?: FlawRequiresCveDescription;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'statement'?: string;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'cwe_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'unembargo_dt'?: string | null;
    /**
     * 
     * @type {FlawSource}
     * @memberof Flaw
     */
    'source'?: FlawSource;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'reported_dt'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'mitigation'?: string;
    /**
     * 
     * @type {FlawMajorIncidentState}
     * @memberof Flaw
     */
    'major_incident_state'?: FlawMajorIncidentState;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'major_incident_start_dt'?: string | null;
    /**
     * 
     * @type {FlawNistCvssValidation}
     * @memberof Flaw
     */
    'nist_cvss_validation'?: FlawNistCvssValidation;
    /**
     * 
     * @type {Array<Affect>}
     * @memberof Flaw
     */
    'affects': Array<Affect>;
    /**
     * 
     * @type {Array<Comment>}
     * @memberof Flaw
     */
    'comments': Array<Comment>;
    /**
     * 
     * @type {Array<Package>}
     * @memberof Flaw
     */
    'package_versions': Array<Package>;
    /**
     * 
     * @type {Array<FlawAcknowledgment>}
     * @memberof Flaw
     */
    'acknowledgments': Array<FlawAcknowledgment>;
    /**
     * 
     * @type {Array<FlawReference>}
     * @memberof Flaw
     */
    'references': Array<FlawReference>;
    /**
     * 
     * @type {Array<FlawCVSS>}
     * @memberof Flaw
     */
    'cvss_scores': Array<FlawCVSS>;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof Flaw
     */
    'embargoed': boolean;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof Flaw
     */
    'updated_dt': string;
    /**
     * 
     * @type {FlawClassification}
     * @memberof Flaw
     */
    'classification': FlawClassification;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'group_key'?: string;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'owner'?: string;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'task_key'?: string;
    /**
     * 
     * @type {string}
     * @memberof Flaw
     */
    'team_id'?: string;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof Flaw
     */
    'alerts': Array<Alert>;
}
/**
 * FlawAcknowledgment serializer
 * @export
 * @interface FlawAcknowledgment
 */
export interface FlawAcknowledgment {
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgment
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgment
     */
    'affiliation': string;
    /**
     * 
     * @type {boolean}
     * @memberof FlawAcknowledgment
     */
    'from_upstream': boolean;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgment
     */
    'flaw': string;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgment
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawAcknowledgment
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawAcknowledgment
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgment
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof FlawAcknowledgment
     */
    'updated_dt': string;
}
/**
 * FlawAcknowledgment serializer
 * @export
 * @interface FlawAcknowledgmentPost
 */
export interface FlawAcknowledgmentPost {
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgmentPost
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgmentPost
     */
    'affiliation': string;
    /**
     * 
     * @type {boolean}
     * @memberof FlawAcknowledgmentPost
     */
    'from_upstream': boolean;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgmentPost
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawAcknowledgmentPost
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawAcknowledgmentPost
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgmentPost
     */
    'created_dt': string;
}
/**
 * FlawAcknowledgment serializer
 * @export
 * @interface FlawAcknowledgmentPut
 */
export interface FlawAcknowledgmentPut {
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgmentPut
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgmentPut
     */
    'affiliation': string;
    /**
     * 
     * @type {boolean}
     * @memberof FlawAcknowledgmentPut
     */
    'from_upstream': boolean;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgmentPut
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawAcknowledgmentPut
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawAcknowledgmentPut
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawAcknowledgmentPut
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof FlawAcknowledgmentPut
     */
    'updated_dt': string;
}
/**
 * FlawCVSS serializer
 * @export
 * @interface FlawCVSS
 */
export interface FlawCVSS {
    /**
     * 
     * @type {string}
     * @memberof FlawCVSS
     */
    'flaw'?: string;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSS
     */
    'comment'?: string | null;
    /**
     * 
     * @type {CvssVersionEnum}
     * @memberof FlawCVSS
     */
    'cvss_version': CvssVersionEnum;
    /**
     * 
     * @type {IssuerEnum}
     * @memberof FlawCVSS
     */
    'issuer': IssuerEnum;
    /**
     * 
     * @type {number}
     * @memberof FlawCVSS
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSS
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSS
     */
    'vector': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawCVSS
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawCVSS
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSS
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof FlawCVSS
     */
    'updated_dt': string;
}


/**
 * FlawCVSS serializer
 * @export
 * @interface FlawCVSSPost
 */
export interface FlawCVSSPost {
    /**
     * 
     * @type {string}
     * @memberof FlawCVSSPost
     */
    'comment'?: string | null;
    /**
     * 
     * @type {CvssVersionEnum}
     * @memberof FlawCVSSPost
     */
    'cvss_version': CvssVersionEnum;
    /**
     * 
     * @type {IssuerEnum}
     * @memberof FlawCVSSPost
     */
    'issuer': IssuerEnum;
    /**
     * 
     * @type {number}
     * @memberof FlawCVSSPost
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSSPost
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSSPost
     */
    'vector': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawCVSSPost
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawCVSSPost
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSSPost
     */
    'created_dt': string;
}


/**
 * FlawCVSS serializer
 * @export
 * @interface FlawCVSSPut
 */
export interface FlawCVSSPut {
    /**
     * 
     * @type {string}
     * @memberof FlawCVSSPut
     */
    'comment'?: string | null;
    /**
     * 
     * @type {CvssVersionEnum}
     * @memberof FlawCVSSPut
     */
    'cvss_version': CvssVersionEnum;
    /**
     * 
     * @type {IssuerEnum}
     * @memberof FlawCVSSPut
     */
    'issuer': IssuerEnum;
    /**
     * 
     * @type {number}
     * @memberof FlawCVSSPut
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSSPut
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSSPut
     */
    'vector': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawCVSSPut
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawCVSSPut
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawCVSSPut
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof FlawCVSSPut
     */
    'updated_dt': string;
}


/**
 * 
 * @export
 * @interface FlawClassification
 */
export interface FlawClassification {
    /**
     * 
     * @type {string}
     * @memberof FlawClassification
     */
    'workflow'?: string;
    /**
     * 
     * @type {string}
     * @memberof FlawClassification
     */
    'state'?: FlawClassificationStateEnum;
}

export const FlawClassificationStateEnum = {
    Empty: '',
    New: 'NEW',
    Triage: 'TRIAGE',
    PreSecondaryAssessment: 'PRE_SECONDARY_ASSESSMENT',
    SecondaryAssessment: 'SECONDARY_ASSESSMENT',
    Done: 'DONE',
    Rejected: 'REJECTED'
} as const;

export type FlawClassificationStateEnum = typeof FlawClassificationStateEnum[keyof typeof FlawClassificationStateEnum];

/**
 * FlawComment serializer for use by flaw_comments endpoint
 * @export
 * @interface FlawComment
 */
export interface FlawComment {
    /**
     * 
     * @type {string}
     * @memberof FlawComment
     */
    'flaw': string;
    /**
     * 
     * @type {string}
     * @memberof FlawComment
     */
    'text': string;
    /**
     * 
     * @type {string}
     * @memberof FlawComment
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof FlawComment
     */
    'external_system_id': string;
    /**
     * 
     * @type {number}
     * @memberof FlawComment
     */
    'order': number | null;
    /**
     * 
     * @type {string}
     * @memberof FlawComment
     */
    'creator'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof FlawComment
     */
    'is_private'?: boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawComment
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawComment
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof FlawComment
     */
    'updated_dt': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawComment
     */
    'embargoed': boolean;
}
/**
 * FlawComment serializer for use by flaw_comments endpoint
 * @export
 * @interface FlawCommentPost
 */
export interface FlawCommentPost {
    /**
     * 
     * @type {string}
     * @memberof FlawCommentPost
     */
    'text': string;
    /**
     * 
     * @type {string}
     * @memberof FlawCommentPost
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof FlawCommentPost
     */
    'creator'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof FlawCommentPost
     */
    'is_private'?: boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawCommentPost
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawCommentPost
     */
    'created_dt': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawCommentPost
     */
    'embargoed': boolean;
}
/**
 * @type FlawMajorIncidentState
 * @export
 */
export type FlawMajorIncidentState = BlankEnum | MajorIncidentStateEnum;

/**
 * @type FlawNistCvssValidation
 * @export
 */
export type FlawNistCvssValidation = BlankEnum | NistCvssValidationEnum;

/**
 * Package model serializer
 * @export
 * @interface FlawPackageVersion
 */
export interface FlawPackageVersion {
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersion
     */
    'package': string;
    /**
     * 
     * @type {Array<FlawVersion>}
     * @memberof FlawPackageVersion
     */
    'versions': Array<FlawVersion>;
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersion
     */
    'flaw': string;
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersion
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawPackageVersion
     */
    'embargoed': boolean;
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersion
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof FlawPackageVersion
     */
    'updated_dt': string;
}
/**
 * Package model serializer
 * @export
 * @interface FlawPackageVersionPost
 */
export interface FlawPackageVersionPost {
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersionPost
     */
    'package': string;
    /**
     * 
     * @type {Array<FlawVersion>}
     * @memberof FlawPackageVersionPost
     */
    'versions': Array<FlawVersion>;
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersionPost
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawPackageVersionPost
     */
    'embargoed': boolean;
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersionPost
     */
    'created_dt': string;
}
/**
 * Package model serializer
 * @export
 * @interface FlawPackageVersionPut
 */
export interface FlawPackageVersionPut {
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersionPut
     */
    'package': string;
    /**
     * 
     * @type {Array<FlawVersion>}
     * @memberof FlawPackageVersionPut
     */
    'versions': Array<FlawVersion>;
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersionPut
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawPackageVersionPut
     */
    'embargoed': boolean;
    /**
     * 
     * @type {string}
     * @memberof FlawPackageVersionPut
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof FlawPackageVersionPut
     */
    'updated_dt': string;
}
/**
 * serialize flaw model
 * @export
 * @interface FlawPost
 */
export interface FlawPost {
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'cve_id'?: string | null;
    /**
     * 
     * @type {AffectImpact}
     * @memberof FlawPost
     */
    'impact'?: AffectImpact;
    /**
     * 
     * @type {Array<string>}
     * @memberof FlawPost
     */
    'components'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'title': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof FlawPost
     */
    'trackers': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'comment_zero': string;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'cve_description'?: string;
    /**
     * 
     * @type {FlawRequiresCveDescription}
     * @memberof FlawPost
     */
    'requires_cve_description'?: FlawRequiresCveDescription;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'statement'?: string;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'cwe_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'unembargo_dt'?: string | null;
    /**
     * 
     * @type {FlawSource}
     * @memberof FlawPost
     */
    'source'?: FlawSource;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'reported_dt'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'mitigation'?: string;
    /**
     * 
     * @type {FlawMajorIncidentState}
     * @memberof FlawPost
     */
    'major_incident_state'?: FlawMajorIncidentState;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'major_incident_start_dt'?: string | null;
    /**
     * 
     * @type {FlawNistCvssValidation}
     * @memberof FlawPost
     */
    'nist_cvss_validation'?: FlawNistCvssValidation;
    /**
     * 
     * @type {Array<Affect>}
     * @memberof FlawPost
     */
    'affects': Array<Affect>;
    /**
     * 
     * @type {Array<Comment>}
     * @memberof FlawPost
     */
    'comments': Array<Comment>;
    /**
     * 
     * @type {Array<Package>}
     * @memberof FlawPost
     */
    'package_versions': Array<Package>;
    /**
     * 
     * @type {Array<FlawAcknowledgment>}
     * @memberof FlawPost
     */
    'acknowledgments': Array<FlawAcknowledgment>;
    /**
     * 
     * @type {Array<FlawReference>}
     * @memberof FlawPost
     */
    'references': Array<FlawReference>;
    /**
     * 
     * @type {Array<FlawCVSS>}
     * @memberof FlawPost
     */
    'cvss_scores': Array<FlawCVSS>;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawPost
     */
    'embargoed': boolean;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'created_dt': string;
    /**
     * 
     * @type {FlawClassification}
     * @memberof FlawPost
     */
    'classification': FlawClassification;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'group_key'?: string;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'owner'?: string;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'task_key'?: string;
    /**
     * 
     * @type {string}
     * @memberof FlawPost
     */
    'team_id'?: string;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawPost
     */
    'alerts': Array<Alert>;
}
/**
 * FlawReference serializer
 * @export
 * @interface FlawReference
 */
export interface FlawReference {
    /**
     * 
     * @type {string}
     * @memberof FlawReference
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof FlawReference
     */
    'flaw': string;
    /**
     * 
     * @type {FlawReferenceType}
     * @memberof FlawReference
     */
    'type'?: FlawReferenceType;
    /**
     * 
     * @type {string}
     * @memberof FlawReference
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof FlawReference
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawReference
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawReference
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawReference
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof FlawReference
     */
    'updated_dt': string;
}


/**
 * FlawReference serializer
 * @export
 * @interface FlawReferencePost
 */
export interface FlawReferencePost {
    /**
     * 
     * @type {string}
     * @memberof FlawReferencePost
     */
    'description'?: string;
    /**
     * 
     * @type {FlawReferenceType}
     * @memberof FlawReferencePost
     */
    'type'?: FlawReferenceType;
    /**
     * 
     * @type {string}
     * @memberof FlawReferencePost
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof FlawReferencePost
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawReferencePost
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawReferencePost
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawReferencePost
     */
    'created_dt': string;
}


/**
 * FlawReference serializer
 * @export
 * @interface FlawReferencePut
 */
export interface FlawReferencePut {
    /**
     * 
     * @type {string}
     * @memberof FlawReferencePut
     */
    'description'?: string;
    /**
     * 
     * @type {FlawReferenceType}
     * @memberof FlawReferencePut
     */
    'type'?: FlawReferenceType;
    /**
     * 
     * @type {string}
     * @memberof FlawReferencePut
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof FlawReferencePut
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof FlawReferencePut
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof FlawReferencePut
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof FlawReferencePut
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof FlawReferencePut
     */
    'updated_dt': string;
}


/**
 * 
 * @export
 * @enum {string}
 */

export const FlawReferenceType = {
    Article: 'ARTICLE',
    External: 'EXTERNAL',
    Source: 'SOURCE'
} as const;

export type FlawReferenceType = typeof FlawReferenceType[keyof typeof FlawReferenceType];


/**
 * 
 * @export
 * @interface FlawReportData
 */
export interface FlawReportData {
    /**
     * 
     * @type {string}
     * @memberof FlawReportData
     */
    'cve_id'?: string | null;
    /**
     * 
     * @type {Array<AffectReportData>}
     * @memberof FlawReportData
     */
    'affects'?: Array<AffectReportData>;
}
/**
 * @type FlawRequiresCveDescription
 * @export
 */
export type FlawRequiresCveDescription = BlankEnum | RequiresCveDescriptionEnum;

/**
 * @type FlawSource
 * @export
 */
export type FlawSource = BlankEnum | SourceBe0Enum;

/**
 * 
 * @export
 * @interface FlawUUIDList
 */
export interface FlawUUIDList {
    /**
     * 
     * @type {Array<string>}
     * @memberof FlawUUIDList
     */
    'flaw_uuids': Array<string>;
}
/**
 * PackageVer serializer used by FlawPackageVersionSerializer.
 * @export
 * @interface FlawVersion
 */
export interface FlawVersion {
    /**
     * 
     * @type {string}
     * @memberof FlawVersion
     */
    'version': string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const ImpactEnum = {
    Low: 'LOW',
    Moderate: 'MODERATE',
    Important: 'IMPORTANT',
    Critical: 'CRITICAL'
} as const;

export type ImpactEnum = typeof ImpactEnum[keyof typeof ImpactEnum];


/**
 * 
 * @export
 * @enum {string}
 */

export const IssuerEnum = {
    Cveorg: 'CVEORG',
    Rh: 'RH',
    Nist: 'NIST',
    Osv: 'OSV'
} as const;

export type IssuerEnum = typeof IssuerEnum[keyof typeof IssuerEnum];


/**
 * 
 * @export
 * @enum {string}
 */

export const MajorIncidentStateEnum = {
    Requested: 'REQUESTED',
    Rejected: 'REJECTED',
    Approved: 'APPROVED',
    CisaApproved: 'CISA_APPROVED',
    Minor: 'MINOR',
    ZeroDay: 'ZERO_DAY',
    Invalid: 'INVALID'
} as const;

export type MajorIncidentStateEnum = typeof MajorIncidentStateEnum[keyof typeof MajorIncidentStateEnum];


/**
 * 
 * @export
 * @enum {string}
 */

export const MaturityPreliminaryEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;

export type MaturityPreliminaryEnum = typeof MaturityPreliminaryEnum[keyof typeof MaturityPreliminaryEnum];


/**
 * 
 * @export
 * @interface ModuleComponent
 */
export interface ModuleComponent {
    /**
     * 
     * @type {string}
     * @memberof ModuleComponent
     */
    'ps_module': string;
    /**
     * 
     * @type {string}
     * @memberof ModuleComponent
     */
    'ps_component': string;
    /**
     * 
     * @type {Array<PsStreamSelection>}
     * @memberof ModuleComponent
     */
    'streams': Array<PsStreamSelection>;
    /**
     * 
     * @type {boolean}
     * @memberof ModuleComponent
     */
    'selected': boolean;
    /**
     * 
     * @type {Affect}
     * @memberof ModuleComponent
     */
    'affect': Affect;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const NistCvssValidationEnum = {
    Requested: 'REQUESTED',
    Approved: 'APPROVED',
    Rejected: 'REJECTED'
} as const;

export type NistCvssValidationEnum = typeof NistCvssValidationEnum[keyof typeof NistCvssValidationEnum];


/**
 * 
 * @export
 * @interface OsidbApiV1AffectsBulkUpdate200Response
 */
export interface OsidbApiV1AffectsBulkUpdate200Response {
    /**
     * 
     * @type {Array<Affect>}
     * @memberof OsidbApiV1AffectsBulkUpdate200Response
     */
    'results': Array<Affect>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsBulkUpdate200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsBulkUpdate200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsBulkUpdate200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsBulkUpdate200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1AffectsCreate201Response
 */
export interface OsidbApiV1AffectsCreate201Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'flaw': string | null;
    /**
     * 
     * @type {AffectAffectedness}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'affectedness'?: AffectAffectedness;
    /**
     * 
     * @type {AffectResolution}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'resolution'?: AffectResolution;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'ps_module': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'ps_product': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'ps_component': string;
    /**
     * 
     * @type {AffectImpact}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'impact'?: AffectImpact;
    /**
     * 
     * @type {Array<Tracker>}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'trackers': Array<Tracker>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'delegated_resolution': string;
    /**
     * 
     * @type {Array<AffectCVSS>}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'cvss_scores': Array<AffectCVSS>;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'updated_dt': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCreate201Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1AffectsCvssScoresCreate201Response
 */
export interface OsidbApiV1AffectsCvssScoresCreate201Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'affect'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'comment'?: string | null;
    /**
     * 
     * @type {CvssVersionEnum}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'cvss_version': CvssVersionEnum;
    /**
     * 
     * @type {IssuerEnum}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'issuer': IssuerEnum;
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'vector': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'updated_dt': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresCreate201Response
     */
    'version'?: string;
}


/**
 * 
 * @export
 * @interface OsidbApiV1AffectsCvssScoresList200Response
 */
export interface OsidbApiV1AffectsCvssScoresList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1AffectsCvssScoresList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<AffectCVSS>}
     * @memberof OsidbApiV1AffectsCvssScoresList200Response
     */
    'results': Array<AffectCVSS>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsCvssScoresList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1AffectsList200Response
 */
export interface OsidbApiV1AffectsList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1AffectsList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Affect>}
     * @memberof OsidbApiV1AffectsList200Response
     */
    'results': Array<Affect>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AffectsList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1AlertsList200Response
 */
export interface OsidbApiV1AlertsList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1AlertsList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1AlertsList200Response
     */
    'results': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1AlertsRetrieve200Response
 */
export interface OsidbApiV1AlertsRetrieve200Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'description': string;
    /**
     * 
     * @type {AlertTypeEnum}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'alert_type'?: AlertTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'resolution_steps'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'parent_uuid': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'parent_model': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AlertsRetrieve200Response
     */
    'version'?: string;
}


/**
 * 
 * @export
 * @interface OsidbApiV1AuditList200Response
 */
export interface OsidbApiV1AuditList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1AuditList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Audit>}
     * @memberof OsidbApiV1AuditList200Response
     */
    'results': Array<Audit>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1AuditRetrieve200Response
 */
export interface OsidbApiV1AuditRetrieve200Response {
    /**
     * When the event was created.
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'pgh_created_at': string;
    /**
     * The unique identifier across all event tables.
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'pgh_slug': string;
    /**
     * The object model.
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'pgh_obj_model': string;
    /**
     * The primary key of the object.
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'pgh_obj_id'?: string | null;
    /**
     * The event label.
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'pgh_label': string;
    /**
     * The context associated with the event.
     * @type {any}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'pgh_context'?: any | null;
    /**
     * The diff between the previous event of the same label.
     * @type {any}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'pgh_diff': any;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'pgh_data': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1AuditRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsAcknowledgmentsCreate201Response
 */
export interface OsidbApiV1FlawsAcknowledgmentsCreate201Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'name': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'affiliation': string;
    /**
     * 
     * @type {boolean}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'from_upstream': boolean;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'flaw': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'updated_dt': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsCreate201Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsAcknowledgmentsList200Response
 */
export interface OsidbApiV1FlawsAcknowledgmentsList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1FlawsAcknowledgmentsList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawAcknowledgment>}
     * @memberof OsidbApiV1FlawsAcknowledgmentsList200Response
     */
    'results': Array<FlawAcknowledgment>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsAcknowledgmentsList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsCommentsCreate201Response
 */
export interface OsidbApiV1FlawsCommentsCreate201Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'flaw': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'text': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'external_system_id': string;
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'order': number | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'creator'?: string;
    /**
     * 
     * @type {boolean}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'is_private'?: boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'updated_dt': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsCreate201Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsCommentsList200Response
 */
export interface OsidbApiV1FlawsCommentsList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1FlawsCommentsList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawComment>}
     * @memberof OsidbApiV1FlawsCommentsList200Response
     */
    'results': Array<FlawComment>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCommentsList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsCreate201Response
 */
export interface OsidbApiV1FlawsCreate201Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'cve_id'?: string | null;
    /**
     * 
     * @type {AffectImpact}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'impact'?: AffectImpact;
    /**
     * 
     * @type {Array<string>}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'components'?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'title': string;
    /**
     * 
     * @type {Array<string>}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'trackers': Array<string>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'comment_zero': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'cve_description'?: string;
    /**
     * 
     * @type {FlawRequiresCveDescription}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'requires_cve_description'?: FlawRequiresCveDescription;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'statement'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'cwe_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'unembargo_dt'?: string | null;
    /**
     * 
     * @type {FlawSource}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'source'?: FlawSource;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'reported_dt'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'mitigation'?: string;
    /**
     * 
     * @type {FlawMajorIncidentState}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'major_incident_state'?: FlawMajorIncidentState;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'major_incident_start_dt'?: string | null;
    /**
     * 
     * @type {FlawNistCvssValidation}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'nist_cvss_validation'?: FlawNistCvssValidation;
    /**
     * 
     * @type {Array<Affect>}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'affects': Array<Affect>;
    /**
     * 
     * @type {Array<Comment>}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'comments': Array<Comment>;
    /**
     * 
     * @type {Array<Package>}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'package_versions': Array<Package>;
    /**
     * 
     * @type {Array<FlawAcknowledgment>}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'acknowledgments': Array<FlawAcknowledgment>;
    /**
     * 
     * @type {Array<FlawReference>}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'references': Array<FlawReference>;
    /**
     * 
     * @type {Array<FlawCVSS>}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'cvss_scores': Array<FlawCVSS>;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'updated_dt': string;
    /**
     * 
     * @type {FlawClassification}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'classification': FlawClassification;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'group_key'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'owner'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'task_key'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'team_id'?: string;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCreate201Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsCvssScoresCreate201Response
 */
export interface OsidbApiV1FlawsCvssScoresCreate201Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'flaw'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'comment'?: string | null;
    /**
     * 
     * @type {CvssVersionEnum}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'cvss_version': CvssVersionEnum;
    /**
     * 
     * @type {IssuerEnum}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'issuer': IssuerEnum;
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'score': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'uuid': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'vector': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'updated_dt': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresCreate201Response
     */
    'version'?: string;
}


/**
 * 
 * @export
 * @interface OsidbApiV1FlawsCvssScoresList200Response
 */
export interface OsidbApiV1FlawsCvssScoresList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1FlawsCvssScoresList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawCVSS>}
     * @memberof OsidbApiV1FlawsCvssScoresList200Response
     */
    'results': Array<FlawCVSS>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsCvssScoresList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsList200Response
 */
export interface OsidbApiV1FlawsList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1FlawsList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Flaw>}
     * @memberof OsidbApiV1FlawsList200Response
     */
    'results': Array<Flaw>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsPackageVersionsCreate201Response
 */
export interface OsidbApiV1FlawsPackageVersionsCreate201Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'package': string;
    /**
     * 
     * @type {Array<FlawVersion>}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'versions': Array<FlawVersion>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'flaw': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'updated_dt': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsCreate201Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsPackageVersionsList200Response
 */
export interface OsidbApiV1FlawsPackageVersionsList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1FlawsPackageVersionsList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawPackageVersion>}
     * @memberof OsidbApiV1FlawsPackageVersionsList200Response
     */
    'results': Array<FlawPackageVersion>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsPackageVersionsList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1FlawsReferencesCreate201Response
 */
export interface OsidbApiV1FlawsReferencesCreate201Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'description'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'flaw': string;
    /**
     * 
     * @type {FlawReferenceType}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'type'?: FlawReferenceType;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'url': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'updated_dt': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesCreate201Response
     */
    'version'?: string;
}


/**
 * 
 * @export
 * @interface OsidbApiV1FlawsReferencesList200Response
 */
export interface OsidbApiV1FlawsReferencesList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1FlawsReferencesList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawReference>}
     * @memberof OsidbApiV1FlawsReferencesList200Response
     */
    'results': Array<FlawReference>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1FlawsReferencesList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1SchemaRetrieve200Response
 */
export interface OsidbApiV1SchemaRetrieve200Response {
    [key: string]: any;

    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1SchemaRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1SchemaRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1SchemaRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1SchemaRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1StatusRetrieve200Response
 */
export interface OsidbApiV1StatusRetrieve200Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1StatusRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1StatusRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {OsidbApiV1StatusRetrieve200ResponseOsidbData}
     * @memberof OsidbApiV1StatusRetrieve200Response
     */
    'osidb_data'?: OsidbApiV1StatusRetrieve200ResponseOsidbData;
    /**
     * 
     * @type {object}
     * @memberof OsidbApiV1StatusRetrieve200Response
     */
    'osidb_service'?: object;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1StatusRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1StatusRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1StatusRetrieve200ResponseOsidbData
 */
export interface OsidbApiV1StatusRetrieve200ResponseOsidbData {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1StatusRetrieve200ResponseOsidbData
     */
    'flaw_count'?: number;
}
/**
 * 
 * @export
 * @interface OsidbApiV1TrackersCreate201Response
 */
export interface OsidbApiV1TrackersCreate201Response {
    /**
     * 
     * @type {Array<string>}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'affects'?: Array<string>;
    /**
     * 
     * @type {Array<Erratum>}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'errata': Array<Erratum>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'ps_update_stream': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'status': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'resolution': string;
    /**
     * 
     * @type {TrackerType}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'type': TrackerType;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'updated_dt': string;
    /**
     * Setting sync_to_bz to false disables flaw sync with Bugzilla after this operation. Use only as part of bulk actions and trigger a flaw bugzilla sync afterwards. Does nothing if BZ is disabled.
     * @type {boolean}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'sync_to_bz'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersCreate201Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1TrackersList200Response
 */
export interface OsidbApiV1TrackersList200Response {
    /**
     * 
     * @type {number}
     * @memberof OsidbApiV1TrackersList200Response
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersList200Response
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersList200Response
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Tracker>}
     * @memberof OsidbApiV1TrackersList200Response
     */
    'results': Array<Tracker>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersList200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersList200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersList200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersList200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbApiV1TrackersRetrieve200Response
 */
export interface OsidbApiV1TrackersRetrieve200Response {
    /**
     * 
     * @type {Array<string>}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'affects'?: Array<string>;
    /**
     * 
     * @type {Array<Erratum>}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'errata': Array<Erratum>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'external_system_id': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'ps_update_stream'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'status': string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'resolution': string;
    /**
     * 
     * @type {TrackerType}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'type': TrackerType;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'updated_dt': string;
    /**
     * Setting sync_to_bz to false disables flaw sync with Bugzilla after this operation. Use only as part of bulk actions and trigger a flaw bugzilla sync afterwards. Does nothing if BZ is disabled.
     * @type {boolean}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'sync_to_bz'?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbApiV1TrackersRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbWhoamiRetrieve200Response
 */
export interface OsidbWhoamiRetrieve200Response {
    /**
     * 
     * @type {string}
     * @memberof OsidbWhoamiRetrieve200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbWhoamiRetrieve200Response
     */
    'email'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbWhoamiRetrieve200Response
     */
    'env'?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof OsidbWhoamiRetrieve200Response
     */
    'groups'?: Array<string>;
    /**
     * 
     * @type {OsidbWhoamiRetrieve200ResponseProfile}
     * @memberof OsidbWhoamiRetrieve200Response
     */
    'profile'?: OsidbWhoamiRetrieve200ResponseProfile;
    /**
     * 
     * @type {string}
     * @memberof OsidbWhoamiRetrieve200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbWhoamiRetrieve200Response
     */
    'username'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbWhoamiRetrieve200Response
     */
    'version'?: string;
}
/**
 * 
 * @export
 * @interface OsidbWhoamiRetrieve200ResponseProfile
 */
export interface OsidbWhoamiRetrieve200ResponseProfile {
    /**
     * 
     * @type {string}
     * @memberof OsidbWhoamiRetrieve200ResponseProfile
     */
    'bz_user_id'?: string;
    /**
     * 
     * @type {string}
     * @memberof OsidbWhoamiRetrieve200ResponseProfile
     */
    'jira_user_id'?: string;
}
/**
 * package_versions (Package model) serializer for read-only use in FlawSerializer.
 * @export
 * @interface Package
 */
export interface Package {
    /**
     * 
     * @type {string}
     * @memberof Package
     */
    'package': string;
    /**
     * 
     * @type {Array<PackageVer>}
     * @memberof Package
     */
    'versions': Array<PackageVer>;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof Package
     */
    'alerts': Array<Alert>;
}
/**
 * PackageVer model serializer for read-only use in FlawSerializer via PackageVerSerializer.
 * @export
 * @interface PackageVer
 */
export interface PackageVer {
    /**
     * 
     * @type {string}
     * @memberof PackageVer
     */
    'version': string;
    /**
     * 
     * @type {string}
     * @memberof PackageVer
     * @deprecated
     */
    'status': string;
}
/**
 * 
 * @export
 * @interface PaginatedAffectCVSSList
 */
export interface PaginatedAffectCVSSList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedAffectCVSSList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedAffectCVSSList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedAffectCVSSList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<AffectCVSS>}
     * @memberof PaginatedAffectCVSSList
     */
    'results': Array<AffectCVSS>;
}
/**
 * 
 * @export
 * @interface PaginatedAffectList
 */
export interface PaginatedAffectList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedAffectList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedAffectList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedAffectList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Affect>}
     * @memberof PaginatedAffectList
     */
    'results': Array<Affect>;
}
/**
 * 
 * @export
 * @interface PaginatedAlertList
 */
export interface PaginatedAlertList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedAlertList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedAlertList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedAlertList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof PaginatedAlertList
     */
    'results': Array<Alert>;
}
/**
 * 
 * @export
 * @interface PaginatedAuditList
 */
export interface PaginatedAuditList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedAuditList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedAuditList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedAuditList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Audit>}
     * @memberof PaginatedAuditList
     */
    'results': Array<Audit>;
}
/**
 * 
 * @export
 * @interface PaginatedEPSSList
 */
export interface PaginatedEPSSList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedEPSSList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedEPSSList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedEPSSList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<EPSS>}
     * @memberof PaginatedEPSSList
     */
    'results': Array<EPSS>;
}
/**
 * 
 * @export
 * @interface PaginatedExploitOnlyReportDataList
 */
export interface PaginatedExploitOnlyReportDataList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedExploitOnlyReportDataList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedExploitOnlyReportDataList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedExploitOnlyReportDataList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<ExploitOnlyReportData>}
     * @memberof PaginatedExploitOnlyReportDataList
     */
    'results': Array<ExploitOnlyReportData>;
}
/**
 * 
 * @export
 * @interface PaginatedFlawAcknowledgmentList
 */
export interface PaginatedFlawAcknowledgmentList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedFlawAcknowledgmentList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawAcknowledgmentList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawAcknowledgmentList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawAcknowledgment>}
     * @memberof PaginatedFlawAcknowledgmentList
     */
    'results': Array<FlawAcknowledgment>;
}
/**
 * 
 * @export
 * @interface PaginatedFlawCVSSList
 */
export interface PaginatedFlawCVSSList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedFlawCVSSList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawCVSSList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawCVSSList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawCVSS>}
     * @memberof PaginatedFlawCVSSList
     */
    'results': Array<FlawCVSS>;
}
/**
 * 
 * @export
 * @interface PaginatedFlawCommentList
 */
export interface PaginatedFlawCommentList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedFlawCommentList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawCommentList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawCommentList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawComment>}
     * @memberof PaginatedFlawCommentList
     */
    'results': Array<FlawComment>;
}
/**
 * 
 * @export
 * @interface PaginatedFlawList
 */
export interface PaginatedFlawList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedFlawList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Flaw>}
     * @memberof PaginatedFlawList
     */
    'results': Array<Flaw>;
}
/**
 * 
 * @export
 * @interface PaginatedFlawPackageVersionList
 */
export interface PaginatedFlawPackageVersionList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedFlawPackageVersionList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawPackageVersionList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawPackageVersionList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawPackageVersion>}
     * @memberof PaginatedFlawPackageVersionList
     */
    'results': Array<FlawPackageVersion>;
}
/**
 * 
 * @export
 * @interface PaginatedFlawReferenceList
 */
export interface PaginatedFlawReferenceList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedFlawReferenceList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawReferenceList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawReferenceList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawReference>}
     * @memberof PaginatedFlawReferenceList
     */
    'results': Array<FlawReference>;
}
/**
 * 
 * @export
 * @interface PaginatedFlawReportDataList
 */
export interface PaginatedFlawReportDataList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedFlawReportDataList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawReportDataList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedFlawReportDataList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<FlawReportData>}
     * @memberof PaginatedFlawReportDataList
     */
    'results': Array<FlawReportData>;
}
/**
 * 
 * @export
 * @interface PaginatedSupportedProductsList
 */
export interface PaginatedSupportedProductsList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedSupportedProductsList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedSupportedProductsList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedSupportedProductsList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<SupportedProducts>}
     * @memberof PaginatedSupportedProductsList
     */
    'results': Array<SupportedProducts>;
}
/**
 * 
 * @export
 * @interface PaginatedTrackerList
 */
export interface PaginatedTrackerList {
    /**
     * 
     * @type {number}
     * @memberof PaginatedTrackerList
     */
    'count': number;
    /**
     * 
     * @type {string}
     * @memberof PaginatedTrackerList
     */
    'next'?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PaginatedTrackerList
     */
    'previous'?: string | null;
    /**
     * 
     * @type {Array<Tracker>}
     * @memberof PaginatedTrackerList
     */
    'results': Array<Tracker>;
}
/**
 * 
 * @export
 * @interface PsStreamSelection
 */
export interface PsStreamSelection {
    /**
     * 
     * @type {string}
     * @memberof PsStreamSelection
     */
    'ps_update_stream': string;
    /**
     * 
     * @type {boolean}
     * @memberof PsStreamSelection
     */
    'selected': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PsStreamSelection
     */
    'acked': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PsStreamSelection
     */
    'eus': boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PsStreamSelection
     */
    'aus': boolean;
}
/**
 * Task rejection serializer
 * @export
 * @interface Reject
 */
export interface Reject {
    /**
     * 
     * @type {string}
     * @memberof Reject
     */
    'reason': string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const RequiresCveDescriptionEnum = {
    Requested: 'REQUESTED',
    Approved: 'APPROVED',
    Rejected: 'REJECTED'
} as const;

export type RequiresCveDescriptionEnum = typeof RequiresCveDescriptionEnum[keyof typeof RequiresCveDescriptionEnum];


/**
 * 
 * @export
 * @enum {string}
 */

export const ResolutionEnum = {
    Fix: 'FIX',
    Defer: 'DEFER',
    Wontfix: 'WONTFIX',
    Ooss: 'OOSS',
    Delegated: 'DELEGATED',
    Wontreport: 'WONTREPORT'
} as const;

export type ResolutionEnum = typeof ResolutionEnum[keyof typeof ResolutionEnum];


/**
 * 
 * @export
 * @enum {string}
 */

export const SourceBe0Enum = {
    Adobe: 'ADOBE',
    Apple: 'APPLE',
    Asf: 'ASF',
    Bind: 'BIND',
    Bk: 'BK',
    Bugtraq: 'BUGTRAQ',
    Bugzilla: 'BUGZILLA',
    Cert: 'CERT',
    Certifi: 'CERTIFI',
    Corelabs: 'CORELABS',
    Customer: 'CUSTOMER',
    Cve: 'CVE',
    Cveorg: 'CVEORG',
    Dailydave: 'DAILYDAVE',
    Debian: 'DEBIAN',
    Distros: 'DISTROS',
    Fedora: 'FEDORA',
    Fetchmail: 'FETCHMAIL',
    Freedesktop: 'FREEDESKTOP',
    Freeradius: 'FREERADIUS',
    Frsirt: 'FRSIRT',
    Fulldisclosure: 'FULLDISCLOSURE',
    Gaim: 'GAIM',
    Gentoo: 'GENTOO',
    Gentoobz: 'GENTOOBZ',
    Git: 'GIT',
    Gnome: 'GNOME',
    Gnupg: 'GNUPG',
    Google: 'GOOGLE',
    Hp: 'HP',
    HwVendor: 'HW_VENDOR',
    Ibm: 'IBM',
    Idefense: 'IDEFENSE',
    Internet: 'INTERNET',
    Isc: 'ISC',
    Isec: 'ISEC',
    It: 'IT',
    Jboss: 'JBOSS',
    Jpcert: 'JPCERT',
    Kernelbugzilla: 'KERNELBUGZILLA',
    Kernelsec: 'KERNELSEC',
    Lkml: 'LKML',
    Lwn: 'LWN',
    Macromedia: 'MACROMEDIA',
    Mageia: 'MAGEIA',
    Mailinglist: 'MAILINGLIST',
    Milw0Rm: 'MILW0RM',
    Mit: 'MIT',
    Mitre: 'MITRE',
    Mozilla: 'MOZILLA',
    Muttdev: 'MUTTDEV',
    Netdev: 'NETDEV',
    Niscc: 'NISCC',
    Nvd: 'NVD',
    Ocert: 'OCERT',
    Openoffice: 'OPENOFFICE',
    Openssl: 'OPENSSL',
    Opensuse: 'OPENSUSE',
    Oracle: 'ORACLE',
    Oss: 'OSS',
    Osssecurity: 'OSSSECURITY',
    Osv: 'OSV',
    Php: 'PHP',
    Pidgin: 'PIDGIN',
    Postgresql: 'POSTGRESQL',
    Press: 'PRESS',
    Real: 'REAL',
    Redhat: 'REDHAT',
    Researcher: 'RESEARCHER',
    Rt: 'RT',
    Samba: 'SAMBA',
    Secalert: 'SECALERT',
    Secunia: 'SECUNIA',
    Securityfocus: 'SECURITYFOCUS',
    Sko: 'SKO',
    Squid: 'SQUID',
    Squirrelmail: 'SQUIRRELMAIL',
    Sun: 'SUN',
    Sunsolve: 'SUNSOLVE',
    Suse: 'SUSE',
    Twitter: 'TWITTER',
    Ubuntu: 'UBUNTU',
    Upstream: 'UPSTREAM',
    Vendorsec: 'VENDORSEC',
    Vulnwatch: 'VULNWATCH',
    Wireshark: 'WIRESHARK',
    Xchat: 'XCHAT',
    Xen: 'XEN',
    Xpdf: 'XPDF'
} as const;

export type SourceBe0Enum = typeof SourceBe0Enum[keyof typeof SourceBe0Enum];


/**
 * 
 * @export
 * @interface SupportedProducts
 */
export interface SupportedProducts {
    /**
     * 
     * @type {string}
     * @memberof SupportedProducts
     */
    'name': string;
}
/**
 * 
 * @export
 * @interface TokenObtainPair
 */
export interface TokenObtainPair {
    /**
     * 
     * @type {string}
     * @memberof TokenObtainPair
     */
    'username': string;
    /**
     * 
     * @type {string}
     * @memberof TokenObtainPair
     */
    'password': string;
    /**
     * 
     * @type {string}
     * @memberof TokenObtainPair
     */
    'access': string;
    /**
     * 
     * @type {string}
     * @memberof TokenObtainPair
     */
    'refresh': string;
}
/**
 * 
 * @export
 * @interface TokenRefresh
 */
export interface TokenRefresh {
    /**
     * 
     * @type {string}
     * @memberof TokenRefresh
     */
    'access': string;
    /**
     * 
     * @type {string}
     * @memberof TokenRefresh
     */
    'refresh': string;
}
/**
 * 
 * @export
 * @interface TokenVerify
 */
export interface TokenVerify {
    /**
     * 
     * @type {string}
     * @memberof TokenVerify
     */
    'token': string;
}
/**
 * Tracker serializer
 * @export
 * @interface Tracker
 */
export interface Tracker {
    /**
     * 
     * @type {Array<string>}
     * @memberof Tracker
     */
    'affects'?: Array<string>;
    /**
     * 
     * @type {Array<Erratum>}
     * @memberof Tracker
     */
    'errata': Array<Erratum>;
    /**
     * 
     * @type {string}
     * @memberof Tracker
     */
    'external_system_id': string;
    /**
     * 
     * @type {string}
     * @memberof Tracker
     */
    'ps_update_stream'?: string;
    /**
     * 
     * @type {string}
     * @memberof Tracker
     */
    'status': string;
    /**
     * 
     * @type {string}
     * @memberof Tracker
     */
    'resolution': string;
    /**
     * 
     * @type {TrackerType}
     * @memberof Tracker
     */
    'type': TrackerType;
    /**
     * 
     * @type {string}
     * @memberof Tracker
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof Tracker
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof Tracker
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof Tracker
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof Tracker
     */
    'updated_dt': string;
    /**
     * Setting sync_to_bz to false disables flaw sync with Bugzilla after this operation. Use only as part of bulk actions and trigger a flaw bugzilla sync afterwards. Does nothing if BZ is disabled.
     * @type {boolean}
     * @memberof Tracker
     */
    'sync_to_bz'?: boolean;
}
/**
 * Tracker serializer
 * @export
 * @interface TrackerPost
 */
export interface TrackerPost {
    /**
     * 
     * @type {Array<string>}
     * @memberof TrackerPost
     */
    'affects'?: Array<string>;
    /**
     * 
     * @type {Array<Erratum>}
     * @memberof TrackerPost
     */
    'errata': Array<Erratum>;
    /**
     * 
     * @type {string}
     * @memberof TrackerPost
     */
    'ps_update_stream': string;
    /**
     * 
     * @type {string}
     * @memberof TrackerPost
     */
    'status': string;
    /**
     * 
     * @type {string}
     * @memberof TrackerPost
     */
    'resolution': string;
    /**
     * 
     * @type {TrackerType}
     * @memberof TrackerPost
     */
    'type': TrackerType;
    /**
     * 
     * @type {string}
     * @memberof TrackerPost
     */
    'uuid': string;
    /**
     * The embargoed boolean attribute is technically read-only as it just indirectly modifies the ACLs but is mandatory as it controls the access to the resource.
     * @type {boolean}
     * @memberof TrackerPost
     */
    'embargoed': boolean;
    /**
     * 
     * @type {Array<Alert>}
     * @memberof TrackerPost
     */
    'alerts': Array<Alert>;
    /**
     * 
     * @type {string}
     * @memberof TrackerPost
     */
    'created_dt': string;
    /**
     * The updated_dt timestamp attribute is mandatory on update as it is used to detect mit-air collisions.
     * @type {string}
     * @memberof TrackerPost
     */
    'updated_dt': string;
    /**
     * Setting sync_to_bz to false disables flaw sync with Bugzilla after this operation. Use only as part of bulk actions and trigger a flaw bugzilla sync afterwards. Does nothing if BZ is disabled.
     * @type {boolean}
     * @memberof TrackerPost
     */
    'sync_to_bz'?: boolean;
}
/**
 * 
 * @export
 * @interface TrackerReportData
 */
export interface TrackerReportData {
    /**
     * 
     * @type {TrackerType}
     * @memberof TrackerReportData
     */
    'type': TrackerType;
    /**
     * 
     * @type {string}
     * @memberof TrackerReportData
     */
    'external_system_id': string;
    /**
     * 
     * @type {string}
     * @memberof TrackerReportData
     */
    'status'?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackerReportData
     */
    'resolution'?: string;
}


/**
 * 
 * @export
 * @interface TrackerSuggestion
 */
export interface TrackerSuggestion {
    /**
     * 
     * @type {Array<ModuleComponent>}
     * @memberof TrackerSuggestion
     */
    'modules_components': Array<ModuleComponent>;
    /**
     * 
     * @type {Array<Affect>}
     * @memberof TrackerSuggestion
     */
    'not_applicable': Array<Affect>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export const TrackerType = {
    Jira: 'JIRA',
    Bugzilla: 'BUGZILLA'
} as const;

export type TrackerType = typeof TrackerType[keyof typeof TrackerType];


/**
 * 
 * @export
 * @interface TrackersApiV1FileCreate200Response
 */
export interface TrackersApiV1FileCreate200Response {
    /**
     * 
     * @type {Array<ModuleComponent>}
     * @memberof TrackersApiV1FileCreate200Response
     */
    'modules_components': Array<ModuleComponent>;
    /**
     * 
     * @type {Array<Affect>}
     * @memberof TrackersApiV1FileCreate200Response
     */
    'not_applicable': Array<Affect>;
    /**
     * 
     * @type {string}
     * @memberof TrackersApiV1FileCreate200Response
     */
    'dt'?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackersApiV1FileCreate200Response
     */
    'env'?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackersApiV1FileCreate200Response
     */
    'revision'?: string;
    /**
     * 
     * @type {string}
     * @memberof TrackersApiV1FileCreate200Response
     */
    'version'?: string;
}

