# This is a GitHub Action to deploy images to GitHub Container Registry (GHCR).
# It supports tagging images based on release tags, PR numbers, and PR commits.
# It assumes that the repository name is specified in an environment variable REPO_NAME.
#
# Workflow triggers:
# - Pushes to the main branch
# - PRs targeting the main branch
# - Manual workflow dispatch

name: Deploy Images to GHCR

on:
  push:
    branches:
      - main
      - integration
    paths-ignore:
      - 'openshift/**'
      - '.tekton/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'openshift/**'
      - '.tekton/**'
  workflow_dispatch: {}
  release:
    types: [published]

jobs:
  push-store-image:
    runs-on: ubuntu-latest
    steps:
    - name: 'Set up QEMU'
      uses: docker/setup-qemu-action@v3

    - name: 'Set up Docker Buildx'
      uses: docker/setup-buildx-action@v3

    - name: 'Login to GitHub Container Registry'
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: quay.io
        username: ${{secrets.QUAY_USER}}
        password: ${{secrets.QUAY_TOKEN}}

    - name: 'Determine Image Tags'
      id: tags
      run: |
        REPO_NAME_LOWERCASE=$(echo ${{vars.QUAY_REPO}} | tr '[:upper:]' '[:lower:]')
        if [[ ${{ github.event_name }} == "pull_request" ]]; then
          echo "::set-output name=tags::${REPO_NAME_LOWERCASE}:pr-${{ github.event.pull_request.number }},${REPO_NAME_LOWERCASE}:pr-commit-${{ github.sha }}"
        elif [[ ${{ github.event_name }} == "push" ]]; then
          echo "::set-output name=tags::${REPO_NAME_LOWERCASE}:latest,${REPO_NAME_LOWERCASE}:${GITHUB_REF##*/}"
        elif [[ ${{ github.event_name }} == "release" ]]; then
          echo "::set-output name=tags::${REPO_NAME_LOWERCASE}:release,${REPO_NAME_LOWERCASE}:${{ github.event.release.tag_name }}"
        fi

    - name: 'Build and Push'
      uses: docker/build-push-action@v5
      with:
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.tags.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
