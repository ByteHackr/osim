# This is a GitHub Action to deploy images to GitHub Container Registry (GHCR).
# It supports tagging images based on release tags, PR numbers, and PR commits.
# It assumes that the repository name is specified in an environment variable REPO_NAME.
#
# Workflow triggers:
# - Pushes to the main branch
# - PRs targeting the main branch
# - Manual workflow dispatch

name: Deploy Images to GHCR

on:
  push:
    branches:
      - main
      - integration
    paths-ignore:
      - 'openshift/**'
  pull_request:
    branches:
      - main
      - integration
    paths-ignore:
      - 'openshift/**'
  workflow_dispatch: {}
  release:
    types: [published]

jobs:
  push-store-image:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3

    - name: 'Login to GitHub Container Registry'
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: quay.io
        username: ${{secrets.QUAY_USER}}
        password: ${{secrets.QUAY_TOKEN}}

    - name: 'Build (and Optionally Push) Image'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: quay.io/${{vars.QUAY_REPO}}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
      run: |
        # Convert REPO_NAME to lowercase
        REPO_NAME_LOWERCASE=$(echo ${{vars.QUAY_REPO}} | tr '[:upper:]' '[:lower:]')
        DOCKER_BUILD_FLAGS="--load"
        DOCKER_PUSH_COMMANDS=""

        # Determine the image tag based on the event that triggered the workflow
        if [[ ${{ github.event_name }} == "pull_request" ]]; then
          IMAGE_TAG_PR="pr-${{ github.event.pull_request.number }}"
          IMAGE_TAG_COMMIT="pr-commit-${{ github.sha }}"
          docker build . -t "${REPO_NAME_LOWERCASE}:${IMAGE_TAG_PR}" -t "${REPO_NAME_LOWERCASE}:${IMAGE_TAG_COMMIT}" $DOCKER_BUILD_FLAGS
        elif [[ ${{ github.event_name }} == "push" ]]; then
          DOCKER_BUILD_FLAGS="--push"
          DOCKER_PUSH_COMMANDS="docker push "${REPO_NAME_LOWERCASE}:latest"; docker push "${REPO_NAME_LOWERCASE}:${GITHUB_REF_NAME}""
          docker build . -t "${REPO_NAME_LOWERCASE}:latest" -t "${REPO_NAME_LOWERCASE}:${GITHUB_REF_NAME}" $DOCKER_BUILD_FLAGS
        elif [[ ${{ github.event_name }} == "release" ]]; then
          DOCKER_BUILD_FLAGS="--push"
          IMAGE_TAG_RELEASE="release"
          IMAGE_TAG_RELEASE_NAME="${{ github.event.release.tag_name }}"
          DOCKER_PUSH_COMMANDS="docker push "${REPO_NAME_LOWERCASE}:${IMAGE_TAG_RELEASE}"; docker push "${REPO_NAME_LOWERCASE}:${IMAGE_TAG_RELEASE_NAME}""
          docker build . -t "${REPO_NAME_LOWERCASE}:${IMAGE_TAG_RELEASE}" -t "${REPO_NAME_LOWERCASE}:${IMAGE_TAG_RELEASE_NAME}" $DOCKER_BUILD_FLAGS
        fi
        
        eval "$DOCKER_PUSH_COMMANDS"